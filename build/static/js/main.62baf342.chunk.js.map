{"version":3,"sources":["components/wrapper.js","components/DataArea.js","components/Nav.js","components/SearchInput/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","DataArea","class","scope","Button","onClick","onSort","this","employees","map","employee","id","name","Phone","src","image","Email","DOB","Component","Nav","handleSearchChange","SearchInput","Form","Group","controlId","Label","Control","placeholder","onChange","onSearch","App","state","filteredEmployees","event","keyword","target","value","filtered","filter","toLowerCase","includes","setState","field","direction","console","log","cloned","sort","employeeA","employeeB","ReactDOM","render","document","getElementById"],"mappings":"qkCAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,QCoC1BC,E,uKA/BH,IAAD,OACP,OACE,2BAAOC,MAAM,SACX,+BACE,4BACE,wBAAIC,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,QAAqB,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKP,MAAMQ,OAAO,QAAQ,KAAjD,UACjB,kBAACF,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKP,MAAMQ,OAAO,QAAQ,KAAjD,WACJ,wBAAIH,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SAGJ,+BACGI,KAAKT,MAAMU,UAAUC,KAAI,SAACC,GAAD,OACxB,4BACE,wBAAIP,MAAM,OAAOO,EAASC,IAC1B,4BAAKD,EAASE,MACd,4BAAKF,EAASG,OACd,4BAAI,0BAAMC,IAAOJ,EAASK,SAC1B,4BAAKL,EAASM,OACd,4BAAKN,EAASO,e,GA1BLC,a,cCYRC,MAbf,YACI,OADgC,EAArBC,mBAEP,yBAAKrB,UAAU,iDACf,yBAAKA,UAAU,2BAA2BY,GAAG,0BAC7C,qD,QCJO,SAASU,EAAYvB,GAChC,OACJ,kBAACwB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAECC,YAAY,SACZC,SAAU9B,EAAM+B,a,ICiENC,E,4MArEbC,MAAQ,CACNvB,YACAwB,kBAAmBxB,G,EAIrBqB,SAAW,SAACI,GACV,IAAMC,EAAUD,EAAME,OAAOC,MACvBC,EAAW,EAAKN,MAAMvB,UAAU8B,QAAO,SAAC5B,GAC5C,OAAOA,EAASE,KAAK2B,cAAcC,SAASN,EAAQK,kBAEtD,EAAKE,SAAS,CACZT,kBAAmBK,K,EAKvB/B,OAAS,SAACoC,EAAMC,GACdC,QAAQC,IAAIH,GAEZ,IAAMI,EAAM,YACP,EAAKf,MAAMC,mBAGbW,EACDG,EAAOC,MAAK,SAACC,EAAWC,GAEtB,OAAGD,EAAUN,GAASO,EAAUP,IACtB,EAED,KAITI,EAAOC,MAAK,SAACC,EAAWC,GAEtB,OAAGD,EAAUN,GAASO,EAAUP,GACvB,GAEC,KAQhB,EAAKD,SAAS,CACZT,kBAAmBc,IAErBF,QAAQC,IAAI,Y,uDAIZ,OACE,kBAAC,EAAD,KAEI,kBAAC,EAAD,MACA,kBAACxB,EAAD,CACEQ,SAAYtB,KAAKsB,WAIrB,kBAAC,EAAD,CAAUrB,UAAWD,KAAKwB,MAAMC,kBAAoB1B,OAAUC,KAAKD,QAAnE,U,GAhEUY,aCFlBgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.62baf342.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles/wrapper.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React , {Component} from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n\n\nclass DataArea extends Component {\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">id</th>\n            <th scope=\"col\">Name <Button onClick={() => this.props.onSort('name', true)}>▲</Button>\n                <Button onClick={() => this.props.onSort('name', false)}>▼</Button></th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">DOB</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.employees.map((employee) => (\n            <tr>\n              <th scope=\"row\">{employee.id}</th>\n              <td>{employee.name}</td>\n              <td>{employee.Phone}</td>\n              <td><imag src = {employee.image}></imag></td>\n              <td>{employee.Email}</td>\n              <td>{employee.DOB}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default DataArea;\n","import React from 'react';\n// import SearchBox from './SearchBox';\nimport \"./styles/Nav.css\"\n\nfunction Nav({ handleSearchChange }){\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <h1>Employee Directory</h1>\n          {/* <SearchBox handleSearchChange = {handleSearchChange}></SearchBox> */}\n        </div>\n        </nav>\n\n    )\n}\n\n \nexport default Nav;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n\nexport default function SearchInput(props) {\n    return(\n<Form >\n  <Form.Group controlId=\"booktitle\">\n    <Form.Label>search here</Form.Label>\n    <Form.Control \n\n     placeholder=\"search\" \n     onChange={props.onSearch}\n        />\n  </Form.Group>\n\n</Form>\n    )\n}\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/wrapper\";\nimport DataArea from \"./components/DataArea\";\nimport employees from \"./employees.json\";\nimport Nav from \"./components/Nav\";\nimport SearchInput from \"./components/SearchInput\";\n\nclass App extends Component {\n  state = {\n    employees,\n    filteredEmployees: employees\n  };\n\n  //function handleSearch\n  onSearch = (event) => {\n    const keyword = event.target.value;\n    const filtered = this.state.employees.filter((employee) => {\n      return employee.name.toLowerCase().includes(keyword.toLowerCase())\n    });\n    this.setState({\n      filteredEmployees: filtered\n    })\n\n  }\n\n  onSort = (field,direction) => {\n    console.log(field)\n\n    const cloned = [\n      ...this.state.filteredEmployees\n    ]\n\n    if(direction){\n      cloned.sort((employeeA, employeeB) => {\n\n        if(employeeA[field] < employeeB[field] ){\n          return -1\n        }else{\n          return 1\n        }\n      })}\n      else{\n        cloned.sort((employeeA, employeeB) => {\n\n          if(employeeA[field] < employeeB[field] ){\n            return 1\n          }else{\n            return -1\n          }\n        })\n\n      \n    }\n    \n\n    this.setState({\n      filteredEmployees: cloned,\n    })\n    console.log(\"sorted!\")\n  }\n\n  render() {\n    return (\n      <Wrapper>\n      \n          <Nav/>\n          <SearchInput\n            onSearch = {this.onSearch}\n          />\n\n        \n        <DataArea employees={this.state.filteredEmployees}  onSort = {this.onSort}> </DataArea> \n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}